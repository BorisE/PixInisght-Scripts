******************************************************************************************************
*   Documentation v3.1
******************************************************************************************************
******************************************************************************************************
* 	1. Структура хранения файлов
******************************************************************************************************
Режимы и Use cases

1. PATHMODE.PUT_IN_ROOT_SUBFOLDER
Подразумевает, что все исходые файлы уже находятся внутри папки объекта
После обработки все файлы, которые найдутся в подпапках внутри структуры каталогов, будут размещены в единой стандартной структуре откалиброванных файлов

Вход: M63

M63 / 2019-04-28 	/ *
	/ 2019-04-28 	/ bad			/ *

Выход:
M63	/ calibrated 	/ calibrated
					/ cosmetized
					

На выходе: авто структура калиброванных внутри M63
Проверка недостающих звеньев цепи: работает (оптимальный режим для нее)

2. PATHMODE.PUT_IN_OBJECT_SUBFOLDER
Удобно использовать после съемки, пока все файлы за ночь в том числе по разным объектам находятся в одной папке.
Скрипт сам сгруппирует на выходе по объектам 

Вход: 
2019-04-28	/ *


Выход:
2019-04-28	/ M63	/ calibrated
					/ cosmetized
			/ M92	/ calibrated
					/ cosmetized

Каталоги на выходе созаются автоматически
Проверка недостающих звеньев цепи: работает, но если будут файлы с одинаковыми именами в подпапках - будет считать их одним файлом

TO TEST

2.1 Как вариант использования данного режима: калибровка файлов в каталоге прямо во время съемки. Только нужно выключить cfgSearchInSubDirs = false

Вход:
Images	/ *

Выход:
Images	/ M63	/ calibrated
				/ cosmetized
		/ M92	/ calibrated
				/ cosmetized

Проверка недостающих звеньев цепи: не работает (так как отключено сканирование подкаталогов)
	

2.2 PATHMODE.PutFinalsInObjectSubfolder
То же, что и (2), но оставляет только самые финальные файлы (самой высокой степени обработки). Промежуточные сохраняются отдельно
Скрипт сам сгруппирует на выходе по объектам 

Вход: 
2019-04-28	/ *
			/ bad	/ *

Выход:
2019-04-28 / Results / M63	/ * normalized fits
		   / Results / M92	/ * normalized fits
			/ M63	/ calibrated
					/ cosmetized
			/ M92	/ calibrated
					/ cosmetized

Каталоги на выходе созаются автоматически
Проверка недостающих звеньев цепи: работает, но если будут файлы с одинаковыми именами в подпапках - будет считать их одним файлом

	
3. PATHMODE.ABSOLUTE
Вывод в заданную папку
Вход: 
input folder	/ *

Выход:
output folder	/ calibrated
				/ cosmetized

Проверка недостающих звеньев цепи: работает
				

4. PATHMODE.RELATIVE
Режим создания калиброванных файлов в каждой папке

Вход:
2019-04-28	/ *
2019-04-29	/ *
			/ bad	/ *

Выход:
2019-04-28	/ calibrated
			/ cosmetized
2019-04-29	/ calibrated
			/ cosmetized
			/ bad	/ calibrated
					/ cosmetized

Проверка недостающих звеньев цепи: не тестировалось; должна работать, но файлы с одинаковыми именами в разных папках будет считать одним файлом


5. PATHMODE.RELATIVE_WITH_OBJECT_FOLDER

Тоже, что и (4), только будут создаваться каталоги для каждого объектаы

Проверка недостающих звеньев цепи: не тестировалось; должна работать, но файлы с одинаковыми именами в разных папках будет считать одним файлом

PUT_FINALS: не применимо, будет работать как и в варианте 


6. PATHMODE.AUTO
Не реализована, но должна определять какой режим включать: PutInRootSubfolder или PutInObjectSubfolder

Алгогитм: если в InputFolder есть fits, то считаем, что PutInObjectSubfolder. Если нет файлов, то PutInRootSubfolder








******************************************************************************************************
* 	1. MASTER FILES LIB
******************************************************************************************************
CХЕМА ХРАНЕНИЯ:

 * OBSERVATORY (1)
 * 	|- TELESCOPE 
 *		|- CAMERA 
 *			|- BIN-MODE (2)
 *				|- TYPE (dakrs/flats) (3)
 *					|- TEMP (no for flats) 
 *						|- DATE (4)
 *							|- files
 

Важные замечания:
	(1) Можно настроить, чтобы имя обсерватории было не обязательно
	(2) Ветвление под разные биннинги/гейны/режимы считывания/... Необязательный уровень, в этом случае подбор калибровочных под эти параметры вестисть не будет.
		Данный уровень в иерархии проверяется если:
		а) Указано искать мастера под текущий бининг:
		 - если параметр Config.UseBiningFolder = true
		 - если камера внесена в массив Config.I_USE_BINNING_FOR_THESE_CAMERAS
		б) Указано использовать разные мастера под разные режимы: для этого камера должна быть внесена в массив CAMERA_PRESETS. 
	(3) В папке darks хранятяся и bias, и dark
	(4) Папки уровня DATE можно не использовать, тогда калибровочные будут использованы для любой даты
		Если папка DATE существует, то калибровочные файлы будут использоваться для даты от этой и позже
		Дата может быть в формате 20220101 или 2022-01-01 (разделитель любой), но во вотором случае дата будет собираться из всех цифр в названии (например, 2022-01-01 to 05-01 приведет к дате вида: 202201010501)
	Общие замечания:
	Папки и файлы подбираются на основании их имен папок/файлов, определяемых шаблонами ниже в конфигурации. Содержимое файлов не проверяется! Расширение файлов не проверяется
	Если будет найдено несколько папок/файлов подходящих под шаблон, будет использован первый найденый. Нужно следить, чтобы папки/файлы были уникальными в части ключевых эелментов, определяемых шаблонами.
	Шаблоны задаются в Config

OVERSCAN HANDLING
//new conception: if overscan in light is present, delete overscan and use calibration masters without overscan!

//problem 1: if you use dark wo overscan you need to calibrate it, but then PIX thinks, that he ought to delete overscan and from the dark also and we got ... critical error, because there is no overscan in dark
//solution: use dark with overscan! 
//remark: this is problem for darks only

//problem 2: masters wo overscan should have _c suffix. But then I need to rename all masters even for cameras that can't have overscan.
//solution old, canceled: if light has oversan area, then for this period search for masters with _c suffix. In any other case, use wo _c and asume that this is master wo overscan
//solution new: rename all darks with overscan to "_o" suffix (i.e. dark-TEMP_20deg-P3-BINNING_1-EXPTIME_120-n42_o.fit) and use all masters without this suffix as overscan free files

Есть ли в кадре оверсан определяется функцией calcOverscanPresent: сначала проверяется, есть ли камера в массиве CAMERA_IMAGEWIDTH_OVERSCAN, а затем сравнивается размер кадра в пикселях с указанным в массиве 
Важно! Оверскан проверяется не по флагам в заголовке, а по размеру кадров!


CAMERA PRESETS:
1) Нужно  внести камеру в CAMERA PRESETS
2) Задать название пресета и указать, какие параметры должны проверяться и какие значения принимать для этого пресета
Например:
		QHY600: {
			P1: {
				ReadOutMode: 0, Gain: 0, Offset: 10, USBLimit: 50
				}
 
 ******************************************************************************************************
* 	2. OUTPUT OF CALIBRATED FILES 
******************************************************************************************************
Возможны 3 схемы.
Опредедяется параметром cfgUseRelativeOutputPath ???? и cfgCreateObjectFolder ????

Схема 1. Относительная

В случае ее файлы на выходехранятся так:

 path to file 	/ input FITS file
				/ calibrated 	/ calibrated FITS file
				/ cosmetics 	/ cosmetics corrected FITS file
				/ debayered 	/ debayered file (if СFA)
				/ registered 	/ registered files

Схема 2. Относительная с группировкой по объекту
			Разновидность схемы 1, когда включен параметр cfgCreateObjectFolder ??????	= true
			
 path to file 	/ input FITS file
				/ objectname 	/ calibrated 	/ calibrated FITS file
								/ cosmetics 	/ cosmetics corrected FITS file
								/ debayered 	/ debayered file (if СFA)
								/ registered 	/ registered files
				
Схема 3. Абсолютная, старая (НЕ ФАКТ, ЧТО РАБОТАЕТ!!!)

	calibrated FITS file -	будет храниться в той же папке, где и исходный
	cosmetics corrected FITS file - будет хранитсья в папке Config.OutputPath/calibrated
	debayerd corrected FITS file - будет хранитсья в папке Config.OutputPath/debayered 

******************************************************************************************************
* 	3. COSMETIC CORRECTION ICONS 
******************************************************************************************************
Для каждого инструмента, камера, бининга и имеющейся длительности дарков (если не отключено в конфигурации), нужно создать набор процессов Cosmetic Correction

Cosmetic_Newton320_QHY600_bin1

Они должны назывтаь в следующем формате: 
	'cosmetic_телескоп_камера_bin1_длинаэкспозиции' (Cosmetic_Newton320_QHY600_bin1_600)

если отключено Config.UseExposureInCosmeticsIcons, то длины экспозции не будет (я использут именно так)
если отключено Config.UseCameraInCosmeticsIcons то камеры не будет
нужен ли бининг опеределяется, как и для калибровочных


******************************************************************************************************
* 	4. INPUT PATH
******************************************************************************************************
Или только в указанном каталоге
Или если установлен параметр cfgSearchInSubDirs, то и в подкаталогах. Кроме тех, что начинаются со знака подчеркивания!

******************************************************************************************************
* 	5. RegistrationReferencesPath
******************************************************************************************************
Определяет папку, содержащую набор референсов по выравниюванию разных объектов
Файлы референсов должны начинаться с имени объекта, оканчивающуйся символами-разделителями "- _" (e.g. M39_20190916_G_120s_1x1_-25degC_0.0degN_000014638.FIT)
Важно: BIN в настоящий момент (v4.0) не учитывается!

******************************************************************************************************
* 	6. NormalizationReferencesPath
******************************************************************************************************
Определяет папку, содержащую набор референсов по выравниюванию фона разных объектов в разных фильтрах и с разной длиной экспозции
Файлы референсов должны начинаться с имени объекта, затем фильтр, затем оканчивающуйся символами-разделителями "- _" (e.g. M39_20190916_G_120s_1x1_-25degC_0.0degN_000014638.FIT)
Важно: BIN в настоящий момент (v4.0) не учитывается!

'^' + objectname + '[- _].*_' + filtername + '_' + exposure + 's_'

*/
