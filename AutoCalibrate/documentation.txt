******************************************************************************************************
*   Documentation v3.1
******************************************************************************************************
******************************************************************************************************
* 	1. Структура хранения файлов
******************************************************************************************************
Режимы и Use cases

1. PATHMODE.PUT_IN_ROOT_SUBFOLDER
Подразумевает, что все исходые файлы уже находятся внутри папки объекта
После обработки все файлы, которые найдутся в подпапках внутри структуры каталогов, будут размещены в единой стандартной структуре откалиброванных файлов

Вход: M63

M63 / 2019-04-28 	/ *
	/ 2019-04-28 	/ bad			/ *

Выход:
M63	/ calibrated 	/ calibrated
					/ cosmetized
					

На выходе: авто структура калиброванных внутри M63
Проверка недостающих звеньев цепи: работает (оптимальный режим для нее)

2. PATHMODE.PUT_IN_OBJECT_SUBFOLDER
Удобно использовать после съемки, пока все файлы за ночь в том числе по разным объектам находятся в одной папке.
Скрипт сам сгруппирует на выходе по объектам 

Вход: 
2019-04-28	/ *


Выход:
2019-04-28	/ M63	/ calibrated
					/ cosmetized
			/ M92	/ calibrated
					/ cosmetized

Каталоги на выходе созаются автоматически
Проверка недостающих звеньев цепи: работает, но если будут файлы с одинаковыми именами в подпапках - будет считать их одним файлом

TO TEST

2.1 Как вариант использования данного режима: калибровка файлов в каталоге прямо во время съемки. Только нужно выключить cfgSearchInSubDirs = false

Вход:
Images	/ *

Выход:
Images	/ M63	/ calibrated
				/ cosmetized
		/ M92	/ calibrated
				/ cosmetized

Проверка недостающих звеньев цепи: не работает (так как отключено сканирование подкаталогов)
	

2.2 PATHMODE.PutFinalsInObjectSubfolder
То же, что и (2), но оставляет только самые финальные файлы (самой высокой степени обработки). Промежуточные сохраняются отдельно
Скрипт сам сгруппирует на выходе по объектам 

Вход: 
2019-04-28	/ *
			/ bad	/ *

Выход:
2019-04-28 / Results / M63	/ * normalized fits
		   / Results / M92	/ * normalized fits
			/ M63	/ calibrated
					/ cosmetized
			/ M92	/ calibrated
					/ cosmetized

Каталоги на выходе созаются автоматически
Проверка недостающих звеньев цепи: работает, но если будут файлы с одинаковыми именами в подпапках - будет считать их одним файлом

	
3. PATHMODE.ABSOLUTE
Вывод в заданную папку
Вход: 
input folder	/ *

Выход:
output folder	/ calibrated
				/ cosmetized

Проверка недостающих звеньев цепи: работает
				

4. PATHMODE.RELATIVE
Режим создания калиброванных файлов в каждой папке

Вход:
2019-04-28	/ *
2019-04-29	/ *
			/ bad	/ *

Выход:
2019-04-28	/ calibrated
			/ cosmetized
2019-04-29	/ calibrated
			/ cosmetized
			/ bad	/ calibrated
					/ cosmetized

Проверка недостающих звеньев цепи: не тестировалось; должна работать, но файлы с одинаковыми именами в разных папках будет считать одним файлом


5. PATHMODE.RELATIVE_WITH_OBJECT_FOLDER

Тоже, что и (4), только будут создаваться каталоги для каждого объектаы

Проверка недостающих звеньев цепи: не тестировалось; должна работать, но файлы с одинаковыми именами в разных папках будет считать одним файлом

PUT_FINALS: не применимо, будет работать как и в варианте 


6. PATHMODE.AUTO
Не реализована, но должна определять какой режим включать: PutInRootSubfolder или PutInObjectSubfolder

Алгогитм: если в InputFolder есть fits, то считаем, что PutInObjectSubfolder. Если нет файлов, то PutInRootSubfolder








******************************************************************************************************
* 	1. MASTER FILES LIB
******************************************************************************************************
СХЕМА 1:

calibratePath +'/'+ file.instrument +'/bin'+ file.bin +'/bias.fit';
calibratePath +'/'+ file.instrument +'/bin'+ file.bin +'/dark-'+ file.duration +'.fit';
calibratePath +'/'+ file.instrument +'/bin'+ file.bin +'/flat-'+ file.filter +'.fit';

 ... / Vitar / MakF10 / bin1 / 	dark-300.fit
 ... / Vitar / MakF10 / bin2 / 	bias.fit
 ... / Vitar / MakF10 / bin2 / 	flat-L.fit

 

СХЕМА 2:

 ... / [Vitar /] SW250 [ / bin1] / Darks -20 / 	bias-TEMP_25deg_n117.xisf
							dark-TEMP_20deg-EXPTIME_1200_n55.xisf
							dark-TEMP_20deg-EXPTIME_600.fit
							dark-TEMP_20deg-EXPTIME_60.xisf
							
 ... / [Vitar /] SW250 [ / bin1] / flats20180803 / flat-FILTER_B-BINNING_1_20180803.xisf

Важные замечания:
	1) В иерархии две папки необязательны: имя обсерватории и бининг. Этим управляют параметры Config.UseObserverName и Config.UseBiningFolder соответственно. 
	2) Папки и файлы подбираются на основании их имен папок/файлов, определяемых шаблонами ниже в конфигурации. Содержимое файлов не проверяется! Расширение файлов не проверяется (может быть любым!)
	3) Если будет найдено несколько папок/файлов подходящих под шаблон, будет использован первый найденый. Нужно следить, чтобы папки/файлы были уникальными в части ключевых эелментов, определяемых шаблонами
 

 
******************************************************************************************************
* 	2. OUTPUT OF CALIBRATED FILES 
******************************************************************************************************
Возможны 3 схемы.
Опредедяется параметром cfgUseRelativeOutputPath ???? и cfgCreateObjectFolder ????

Схема 1. Относительная

В случае ее файлы на выходехранятся так:

 path to file 	/ input FITS file
				/ calibrated 	/ calibrated FITS file
				/ cosmetics 	/ cosmetics corrected FITS file
				/ debayered 	/ debayered file (if СFA)
				/ registered 	/ registered files

Схема 2. Относительная с группировкой по объекту
			Разновидность схемы 1, когда включен параметр cfgCreateObjectFolder ??????	= true
			
 path to file 	/ input FITS file
				/ objectname 	/ calibrated 	/ calibrated FITS file
								/ cosmetics 	/ cosmetics corrected FITS file
								/ debayered 	/ debayered file (if СFA)
								/ registered 	/ registered files
				
Схема 3. Абсолютная, старая (НЕ ФАКТ, ЧТО РАБОТАЕТ!!!)

	calibrated FITS file -	будет храниться в той же папке, где и исходный
	cosmetics corrected FITS file - будет хранитсья в папке Config.OutputPath/calibrated
	debayerd corrected FITS file - будет хранитсья в папке Config.OutputPath/debayered 

******************************************************************************************************
* 	3. COSMETIC CORRECTION ICONS 
******************************************************************************************************
Для каждого инструмента (и, если задано в конфигурации, обсерватории), бининга (если не отключено в конфигурации) и имеющейся длительности дарокв, нужно создать набор процессов Cosmetic Correction

Они должны назывтаь в следующем формате: 
	'cosmetic_наблюдатель_телескоп_bin1_длинаэкспозиции' (Сosmetic_Vitar_SW250_bin1_600)

если отключено Config.UseObserverName и Config.UseBiningFolder:
	'cosmetic_телескоп_длинаэкспозиции' (Сosmetic_SW250_600)

если отключено Config.UseExposureInCosmeticsIcons то вообще будет:
	'Сosmetic_телескоп_' (Сosmetic_SW250)
Использую именно такую конфигурацию

******************************************************************************************************
* 	4. INPUT PATH
******************************************************************************************************
Или только в указанном каталоге
Или если установлен параметр cfgSearchInSubDirs, то и в подкаталогах. Кроме тех, что начинаются со знака подчеркивания!

******************************************************************************************************
* 	5. RegistrationReferencesPath
******************************************************************************************************
Определяет папку, содержащую набор референсов по выравниюванию разных объектов
Файлы референсов должны начинаться с имени объекта, оканчивающуйся символами-разделителями "- _" (e.g. M39_20190916_G_120s_1x1_-25degC_0.0degN_000014638.FIT)
Важно: BIN в настоящий момент (v4.0) не учитывается!

******************************************************************************************************
* 	6. NormalizationReferencesPath
******************************************************************************************************
Определяет папку, содержащую набор референсов по выравниюванию фона разных объектов в разных фильтрах и с разной длиной экспозции
Файлы референсов должны начинаться с имени объекта, затем фильтр, затем оканчивающуйся символами-разделителями "- _" (e.g. M39_20190916_G_120s_1x1_-25degC_0.0degN_000014638.FIT)
Важно: BIN в настоящий момент (v4.0) не учитывается!

'^' + objectname + '[- _].*_' + filtername + '_' + exposure + 's_'

*/
